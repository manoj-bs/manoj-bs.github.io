{"version":3,"file":"static/js/399.e616c65d.chunk.js","mappings":"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","sources":["../node_modules/@material-ui/core/Link/linkClasses.js","../node_modules/@material-ui/core/Link/Link.js","core/components/BoxedLayout.tsx","auth/pages/Login.tsx","core/components/SettingsDrawer.tsx","core/config/layout.ts","../node_modules/@material-ui/core/Toolbar/toolbarClasses.js","../node_modules/@material-ui/core/Toolbar/Toolbar.js"],"sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport capitalize from '../utils/capitalize';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = styleProps;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\n\nconst LinkRoot = experimentalStyled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.root, styles[`underline${capitalize(styleProps.underline)}`], styleProps.component === 'button' && styles.button);\n  }\n})(({\n  styleProps\n}) => {\n  return _extends({}, styleProps.underline === 'none' && {\n    textDecoration: 'none'\n  }, styleProps.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, styleProps.underline === 'always' && {\n    textDecoration: 'underline'\n  }, styleProps.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'hover',\n    variant = 'inherit'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  const handleFocus = event => {\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const styleProps = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    styleProps: styleProps,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   * @default 'hover'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","import AppBar from \"@material-ui/core/AppBar\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport GlobalStyles from \"@material-ui/core/GlobalStyles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport React, { useState } from \"react\";\nimport Logo from \"./Logo\";\nimport SettingsDrawer from \"./SettingsDrawer\";\n\ntype BoxedLayoutProps = {\n  children: React.ReactNode;\n};\n\nconst BoxedLayout = ({ children }: BoxedLayoutProps) => {\n  const theme = useTheme();\n  const [settingsOpen, setSettingsOpen] = useState(false);\n\n  const handleSettingsToggle = () => {\n    setSettingsOpen(!settingsOpen);\n  };\n\n  return (\n    <React.Fragment>\n      <GlobalStyles\n        styles={{ body: { backgroundColor: theme.palette.background.paper } }}\n      />\n      <AppBar color=\"transparent\" position=\"relative\">\n        <Toolbar>\n          <Box sx={{ flexGrow: 1 }} />\n          <IconButton\n            aria-label=\"settings\"\n            component=\"span\"\n            onClick={handleSettingsToggle}\n          >\n            <SettingsIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Container component=\"main\" maxWidth=\"xs\" sx={{ mt: 6 }}>\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Logo sx={{ mb: 2 }} />\n          {children}\n          <Box>\n            <SettingsDrawer\n              onDrawerToggle={handleSettingsToggle}\n              open={settingsOpen}\n            />\n          </Box>\n        </Box>\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default BoxedLayout;\n","import Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LoadingButton from \"@material-ui/lab/LoadingButton\";\nimport { useFormik } from \"formik\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport BoxedLayout from \"../../core/components/BoxedLayout\";\nimport { useSnackbar } from \"../../core/contexts/SnackbarProvider\";\nimport { useAuth } from \"../contexts/AuthProvider\";\n\nconst Login = () => {\n  const { isLoggingIn, login } = useAuth();\n  const navigate = useNavigate();\n  const snackbar = useSnackbar();\n  const { t } = useTranslation();\n\n  const handleLogin = (email: string, password: string) => {\n    login(email, password)\n      .then(() =>\n        navigate(`/${process.env.PUBLIC_URL}/admin`, { replace: true })\n      )\n      .catch(() => snackbar.error(t(\"common.errors.unexpected.subTitle\")));\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"demo@example.com\",\n      password: \"guWEK<'r/-47-XG3\",\n    },\n    validationSchema: Yup.object({\n      email: Yup.string()\n        .email(t(\"common.validations.email\"))\n        .required(t(\"common.validations.required\")),\n      password: Yup.string()\n        .min(8, t(\"common.validations.min\", { size: 8 }))\n        .required(t(\"common.validations.required\")),\n    }),\n    onSubmit: (values) => handleLogin(values.email, values.password),\n  });\n\n  return (\n    <Grid container component=\"main\" sx={{ height: \"100vh\" }}>\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={7}\n        sx={{\n          backgroundImage: \"url(./img/startup.svg)\",\n          backgroundRepeat: \"no-repeat\",\n          bgcolor: \"background.default\",\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      />\n      <Grid item xs={12} sm={8} md={5} component={Paper} square>\n        <BoxedLayout>\n          <Typography component=\"h1\" variant=\"h5\">\n            {t(\"auth.login.title\")}\n          </Typography>\n          <Box\n            component=\"form\"\n            marginTop={3}\n            noValidate\n            onSubmit={formik.handleSubmit}\n          >\n            <TextField\n              margin=\"normal\"\n              variant=\"filled\"\n              required\n              fullWidth\n              id=\"email\"\n              label={t(\"auth.login.form.email.label\")}\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              disabled={isLoggingIn}\n              value={formik.values.email}\n              onChange={formik.handleChange}\n              error={formik.touched.email && Boolean(formik.errors.email)}\n              helperText={formik.touched.email && formik.errors.email}\n            />\n            <TextField\n              margin=\"normal\"\n              variant=\"filled\"\n              required\n              fullWidth\n              name=\"password\"\n              label={t(\"auth.login.form.password.label\")}\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              disabled={isLoggingIn}\n              value={formik.values.password}\n              onChange={formik.handleChange}\n              error={formik.touched.password && Boolean(formik.errors.password)}\n              helperText={formik.touched.password && formik.errors.password}\n            />\n            <Box sx={{ textAlign: \"right\" }}>\n              <Link\n                component={RouterLink}\n                to={`/${process.env.PUBLIC_URL}/forgot-password`}\n                variant=\"body2\"\n              >\n                {t(\"auth.login.forgotPasswordLink\")}\n              </Link>\n            </Box>\n            <LoadingButton\n              type=\"submit\"\n              fullWidth\n              loading={isLoggingIn}\n              variant=\"contained\"\n              sx={{ mt: 3 }}\n            >\n              {t(\"auth.login.submit\")}\n            </LoadingButton>\n            <Button\n              component={RouterLink}\n              to={`/${process.env.PUBLIC_URL}/register`}\n              color=\"primary\"\n              fullWidth\n              sx={{ mt: 2 }}\n            >\n              {t(\"auth.login.newAccountLink\")}\n            </Button>\n          </Box>\n        </BoxedLayout>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Login;\n","import Box from \"@material-ui/core/Box\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport ToggleButton from \"@material-ui/core/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/core/ToggleButtonGroup\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useTranslation } from \"react-i18next\";\nimport { drawerWidth } from \"../config/layout\";\nimport { useSettings } from \"../contexts/SettingsProvider\";\n\ntype SettingsDrawerProps = {\n  onDrawerToggle: () => void;\n  open: boolean;\n};\n\nconst SettingsDrawer = ({ onDrawerToggle, open }: SettingsDrawerProps) => {\n  const {\n    changeCollapsed,\n    changeDirection,\n    changeMode,\n    collapsed,\n    direction,\n    mode,\n  } = useSettings();\n  const { i18n, t } = useTranslation();\n\n  const handleDirectionChange = (_: any, direction: \"ltr\" | \"rtl\") => {\n    changeDirection(direction);\n  };\n\n  const handleLanguageChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    i18n.changeLanguage((event.target as HTMLInputElement).value);\n  };\n\n  const handleModeChange = (_: any, mode: string) => {\n    changeMode(mode);\n  };\n\n  const handleSidebarChange = (_: any, collapsed: boolean) => {\n    changeCollapsed(collapsed);\n  };\n\n  return (\n    <Drawer\n      anchor=\"left\"\n      open={open}\n      onClose={onDrawerToggle}\n      sx={{\n        \"& .MuiDrawer-paper\": {\n          width: drawerWidth,\n        },\n      }}\n      variant=\"temporary\"\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          p: 2,\n        }}\n      >\n        <Typography variant=\"h5\">{t(\"settings.drawer.title\")}</Typography>\n        <IconButton color=\"inherit\" onClick={onDrawerToggle} edge=\"end\">\n          <CloseIcon />\n        </IconButton>\n      </Box>\n      <Box sx={{ pl: 2, pr: 2 }}>\n        <Typography\n          gutterBottom\n          id=\"settings-language\"\n          marginTop={3}\n          variant=\"h6\"\n        >\n          {t(\"settings.drawer.language.label\")}\n        </Typography>\n        <FormControl>\n          <RadioGroup\n            aria-label=\"language\"\n            name=\"language-radio-group\"\n            onChange={handleLanguageChange}\n            value={i18n.language}\n          >\n            <FormControlLabel\n              value=\"en\"\n              control={<Radio />}\n              label={t(\"settings.drawer.language.options.en\")}\n            />\n            <FormControlLabel\n              value=\"fr\"\n              control={<Radio />}\n              label={t(\"settings.drawer.language.options.fr\")}\n            />\n          </RadioGroup>\n        </FormControl>\n        <Typography gutterBottom id=\"settings-mode\" marginTop={3} variant=\"h6\">\n          {t(\"settings.drawer.mode.label\")}\n        </Typography>\n        <ToggleButtonGroup\n          color=\"primary\"\n          value={mode}\n          exclusive\n          fullWidth\n          onChange={handleModeChange}\n        >\n          <ToggleButton value=\"light\">\n            {t(\"settings.drawer.mode.options.light\")}\n          </ToggleButton>\n          <ToggleButton value=\"dark\">\n            {t(\"settings.drawer.mode.options.dark\")}\n          </ToggleButton>\n        </ToggleButtonGroup>\n        <Typography gutterBottom id=\"settings-mode\" marginTop={3} variant=\"h6\">\n          {t(\"settings.drawer.direction.label\")}\n        </Typography>\n        <ToggleButtonGroup\n          color=\"primary\"\n          value={direction}\n          exclusive\n          fullWidth\n          onChange={handleDirectionChange}\n        >\n          <ToggleButton value=\"ltr\">\n            {t(\"settings.drawer.direction.options.ltr\")}\n          </ToggleButton>\n          <ToggleButton value=\"rtl\">\n            {t(\"settings.drawer.direction.options.rtl\")}\n          </ToggleButton>\n        </ToggleButtonGroup>\n        <Typography\n          gutterBottom\n          id=\"settings-sidebar\"\n          marginTop={3}\n          variant=\"h6\"\n        >\n          {t(\"settings.drawer.sidebar.label\")}\n        </Typography>\n        <ToggleButtonGroup\n          color=\"primary\"\n          value={collapsed}\n          exclusive\n          fullWidth\n          onChange={handleSidebarChange}\n        >\n          <ToggleButton value={true}>\n            {t(\"settings.drawer.sidebar.options.collapsed\")}\n          </ToggleButton>\n          <ToggleButton value={false}>\n            {t(\"settings.drawer.sidebar.options.full\")}\n          </ToggleButton>\n        </ToggleButtonGroup>\n      </Box>\n    </Drawer>\n  );\n};\n\nexport default SettingsDrawer;\n","export const drawerCollapsedWidth = 104;\nexport const drawerWidth = 280;\n","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getToolbarUtilityClass(slot) {\n  return generateUtilityClass('MuiToolbar', slot);\n}\nconst toolbarClasses = generateUtilityClasses('MuiToolbar', ['root', 'gutters', 'regular', 'dense']);\nexport default toolbarClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport { getToolbarUtilityClass } from './toolbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    disableGutters,\n    variant\n  } = styleProps;\n  const slots = {\n    root: ['root', !disableGutters && 'gutters', variant]\n  };\n  return composeClasses(slots, getToolbarUtilityClass, classes);\n};\n\nconst ToolbarRoot = experimentalStyled('div', {\n  name: 'MuiToolbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.root, !styleProps.disableGutters && styles.gutters, styles[styleProps.variant]);\n  }\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center'\n}, !styleProps.disableGutters && {\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  [theme.breakpoints.up('sm')]: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3)\n  }\n}, styleProps.variant === 'dense' && {\n  minHeight: 48\n}),\n/* Styles applied to the root element if `variant=\"regular\"`. */\n({\n  theme,\n  styleProps\n}) => styleProps.variant === 'regular' && theme.mixins.toolbar);\nconst Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToolbar'\n  });\n\n  const {\n    className,\n    component = 'div',\n    disableGutters = false,\n    variant = 'regular'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"component\", \"disableGutters\", \"variant\"]);\n\n  const styleProps = _extends({}, props, {\n    component,\n    disableGutters,\n    variant\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(ToolbarRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    styleProps: styleProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   * The Toolbar is a flex container, allowing flex item properites to be used to lay out the children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, disables gutter padding.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The variant to use.\n   * @default 'regular'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['dense', 'regular']), PropTypes.string])\n} : void 0;\nexport default Toolbar;"],"names":["getLinkUtilityClass","slot","generateUtilityClass","generateUtilityClasses","LinkRoot","experimentalStyled","Typography","name","overridesResolver","props","styles","styleProps","_extends","root","capitalize","underline","component","button","textDecoration","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","React","inProps","ref","useThemeProps","className","color","onBlur","onFocus","TypographyClasses","variant","other","_objectWithoutPropertiesLoose","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","focusVisible","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","event","current","children","theme","useTheme","useState","settingsOpen","setSettingsOpen","handleSettingsToggle","GlobalStyles","body","palette","background","paper","AppBar","Toolbar","Box","sx","flexGrow","IconButton","onClick","Settings","Container","maxWidth","mt","display","flexDirection","alignItems","Logo","mb","SettingsDrawer","onDrawerToggle","open","useAuth","isLoggingIn","login","navigate","useNavigate","snackbar","useSnackbar","t","useTranslation","formik","useFormik","initialValues","email","password","validationSchema","Yup","required","min","size","onSubmit","values","then","process","replace","catch","error","Grid","container","height","item","xs","sm","md","backgroundImage","backgroundRepeat","bgcolor","backgroundSize","backgroundPosition","Paper","square","marginTop","noValidate","handleSubmit","TextField","fullWidth","id","label","autoComplete","autoFocus","disabled","value","onChange","handleChange","touched","Boolean","errors","helperText","type","textAlign","RouterLink","to","LoadingButton","loading","Button","useSettings","changeCollapsed","changeDirection","changeMode","collapsed","direction","mode","i18n","anchor","onClose","width","drawerWidth","justifyContent","p","edge","pl","pr","gutterBottom","changeLanguage","target","language","control","exclusive","_","drawerCollapsedWidth","getToolbarUtilityClass","ToolbarRoot","disableGutters","gutters","paddingLeft","spacing","paddingRight","breakpoints","up","minHeight","mixins","toolbar","as"],"sourceRoot":""}